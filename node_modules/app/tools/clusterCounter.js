'use strict';

var os = require('os');

module.exports = {};

// Number of logical processor
module.exports.numCPUs = os.cpus().length;

// Number of http worker
module.exports.numHTTP = os.cpus().length;

// Number of telnet worker
let numTelnet = parseInt(os.cpus().length/2);
if (numTelnet<=0) {
    numTelnet = 1;
}
module.exports.numTelnet = numTelnet;

// Override Workers Number
var workerPoolOverride = false;
var workerOverride = [];
for (let i=2; i<process.argv.length; i++) {
    if (workerPoolOverride===false) {
        if (process.argv[i]==="-w") {
            workerPoolOverride = true;
        }
    } else {
        workerOverride.push(process.argv[i]);
    }
}
if (workerOverride.length===2) {
    let success = true;
    try {
        for (let i = 0; i < workerOverride.length; i++) {
            workerOverride[i] = parseInt(workerOverride[i]);
        }
    } catch(e) {
        success = false;
    }
    if (success===true) {
        module.exports.numHTTP = workerOverride[0];
        module.exports.numTelnet = workerOverride[1];
    }
}

// Number of all workers in pool
module.exports.numWorkers = module.exports.numHTTP + module.exports.numTelnet;
